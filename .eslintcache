[{"C:\\Users\\jdc10\\Documents\\GitHub\\PersonalWebsite_Static\\src\\index.tsx":"1","C:\\Users\\jdc10\\Documents\\GitHub\\PersonalWebsite_Static\\src\\reportWebVitals.ts":"2","C:\\Users\\jdc10\\Documents\\GitHub\\PersonalWebsite_Static\\src\\App.tsx":"3","C:\\Users\\jdc10\\Documents\\GitHub\\PersonalWebsite_Static\\src\\components\\Header.tsx":"4","C:\\Users\\jdc10\\Documents\\GitHub\\PersonalWebsite_Static\\src\\components\\Home.tsx":"5","C:\\Users\\jdc10\\Documents\\GitHub\\PersonalWebsite_Static\\src\\components\\Main.tsx":"6","C:\\Users\\jdc10\\Documents\\GitHub\\PersonalWebsite_Static\\src\\components\\Contact.tsx":"7","C:\\Users\\jdc10\\Documents\\GitHub\\PersonalWebsite_Static\\src\\components\\Resume.tsx":"8","C:\\Users\\jdc10\\Documents\\GitHub\\PersonalWebsite_Static\\src\\components\\ProjectGrid.tsx":"9","C:\\Users\\jdc10\\Documents\\GitHub\\PersonalWebsite_Static\\src\\cusotmHooks.ts":"10","C:\\Users\\jdc10\\Documents\\GitHub\\PersonalWebsite_Static\\src\\components\\Footer.tsx":"11","C:\\Users\\jdc10\\Documents\\GitHub\\PersonalWebsite_Static\\src\\components\\AboutMe.tsx":"12"},{"size":579,"mtime":1609726036012,"results":"13","hashOfConfig":"14"},{"size":440,"mtime":1609726036016,"results":"15","hashOfConfig":"14"},{"size":384,"mtime":1609726035985,"results":"16","hashOfConfig":"14"},{"size":1395,"mtime":1609726035988,"results":"17","hashOfConfig":"14"},{"size":235,"mtime":1609726035991,"results":"18","hashOfConfig":"14"},{"size":440,"mtime":1609726035998,"results":"19","hashOfConfig":"14"},{"size":142,"mtime":1609726035985,"results":"20","hashOfConfig":"14"},{"size":132,"mtime":1609726035991,"results":"21","hashOfConfig":"14"},{"size":9607,"mtime":1609727699395,"results":"22","hashOfConfig":"14"},{"size":1072,"mtime":1609462531624,"results":"23","hashOfConfig":"14"},{"size":1241,"mtime":1609726035990,"results":"24","hashOfConfig":"14"},{"size":5418,"mtime":1609726035984,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"lcbj9u",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},"C:\\Users\\jdc10\\Documents\\GitHub\\PersonalWebsite_Static\\src\\index.tsx",[],["52","53"],"C:\\Users\\jdc10\\Documents\\GitHub\\PersonalWebsite_Static\\src\\reportWebVitals.ts",[],"C:\\Users\\jdc10\\Documents\\GitHub\\PersonalWebsite_Static\\src\\App.tsx",[],"C:\\Users\\jdc10\\Documents\\GitHub\\PersonalWebsite_Static\\src\\components\\Header.tsx",[],"C:\\Users\\jdc10\\Documents\\GitHub\\PersonalWebsite_Static\\src\\components\\Home.tsx",[],"C:\\Users\\jdc10\\Documents\\GitHub\\PersonalWebsite_Static\\src\\components\\Main.tsx",[],"C:\\Users\\jdc10\\Documents\\GitHub\\PersonalWebsite_Static\\src\\components\\Contact.tsx",[],"C:\\Users\\jdc10\\Documents\\GitHub\\PersonalWebsite_Static\\src\\components\\Resume.tsx",[],"C:\\Users\\jdc10\\Documents\\GitHub\\PersonalWebsite_Static\\src\\components\\ProjectGrid.tsx",[],"C:\\Users\\jdc10\\Documents\\GitHub\\PersonalWebsite_Static\\src\\cusotmHooks.ts",[],"C:\\Users\\jdc10\\Documents\\GitHub\\PersonalWebsite_Static\\src\\components\\Footer.tsx",[],"C:\\Users\\jdc10\\Documents\\GitHub\\PersonalWebsite_Static\\src\\components\\AboutMe.tsx",["54","55","56","57","58"],"import \"./AboutMe.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Tooltip } from \"antd\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst TelegramOutlinedSvg = () => {\r\n  return (\r\n    <svg\r\n      width=\"24px\"\r\n      height=\"24px\"\r\n      version=\"1.1\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      style={{\r\n        fillRule: \"evenodd\",\r\n        clipRule: \"evenodd\",\r\n        strokeLinejoin: \"round\",\r\n        strokeMiterlimit: 1.41421,\r\n      }}\r\n    >\r\n      <path\r\n        id=\"telegram-1\"\r\n        d=\"M18.384,22.779c0.322,0.228 0.737,0.285 1.107,0.145c0.37,-0.141 0.642,-0.457 0.724,-0.84c0.869,-4.084 2.977,-14.421 3.768,-18.136c0.06,-0.28 -0.04,-0.571 -0.26,-0.758c-0.22,-0.187 -0.525,-0.241 -0.797,-0.14c-4.193,1.552 -17.106,6.397 -22.384,8.35c-0.335,0.124 -0.553,0.446 -0.542,0.799c0.012,0.354 0.25,0.661 0.593,0.764c2.367,0.708 5.474,1.693 5.474,1.693c0,0 1.452,4.385 2.209,6.615c0.095,0.28 0.314,0.5 0.603,0.576c0.288,0.075 0.596,-0.004 0.811,-0.207c1.216,-1.148 3.096,-2.923 3.096,-2.923c0,0 3.572,2.619 5.598,4.062Zm-11.01,-8.677l1.679,5.538l0.373,-3.507c0,0 6.487,-5.851 10.185,-9.186c0.108,-0.098 0.123,-0.262 0.033,-0.377c-0.089,-0.115 -0.253,-0.142 -0.376,-0.064c-4.286,2.737 -11.894,7.596 -11.894,7.596Z\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nconst LastFmLi = () => {\r\n  const [nowPlayingSong, setNowPlayingSong] = useState<string>(\"nothing\");\r\n  const [nowPlayingArtist, setNowPlayingArtist] = useState<string>(\"no-one\");\r\n\r\n  const updateNowPlaying = async () => {\r\n    try {\r\n      const songData = await axios.get(\r\n        \"https://jsonplaceholder.typicode.com/posts\"\r\n      );\r\n\r\n      console.log(songData.data);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    updateNowPlaying();\r\n\r\n    const interval = setInterval(updateNowPlaying, 10000);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n  return <li>listening to ____ by ____</li>;\r\n};\r\n\r\nconst Age = () => {\r\n  const [age, setAge] = useState(\r\n    Math.round((new Date().getTime() - 1021004428000) / 1000)\r\n  );\r\n\r\n  const UpdateAge = () => {\r\n    setAge(Math.round((new Date().getTime() - 1021004428000) / 1000));\r\n  };\r\n\r\n  useEffect(() => {\r\n    UpdateAge();\r\n\r\n    const interval = setInterval(UpdateAge, 1000);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <li>\r\n      <span style={{ fontFamily: \"Fira Code\" }}>{age}</span> seconds old{\" \"}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport const AboutMe = () => {\r\n  const EmailHandler = () => {\r\n    const email = \"Y29udGFjdEBqYWtlY292ZXIubWU=\";\r\n    window.prompt(\"Thanks for being a human! Here's my email:\", atob(email));\r\n  };\r\n\r\n  return (\r\n    <div id={\"about-me-parent\"}>\r\n      <div id={\"about-me\"} className={\"about-me-card\"}>\r\n        <h1> Hi! I'm Jake!</h1>\r\n\r\n        <div id={\"info-parent\"}>\r\n          <div id={\"specific-info\"}>\r\n            <h2> A bit about me:</h2>\r\n\r\n            <ul>\r\n              <li>\r\n                <b>Name</b>: Jake Cover\r\n              </li>\r\n              <li>Occupation: Student</li>\r\n              <li>Location: Southern California</li>\r\n              <li>\r\n                Projects:{\" \"}\r\n                <button\r\n                  onClick={() =>\r\n                    document.getElementById(\"project-header\")?.scrollIntoView({\r\n                      behavior: \"smooth\",\r\n                      block: \"start\",\r\n                    })\r\n                  }\r\n                >\r\n                  Down there\r\n                </button>\r\n              </li>\r\n              <li>\r\n                Resume: <Link to={\"/resume\"}>Over here</Link>\r\n              </li>\r\n              <li>\r\n                Find Me:\r\n                <ul>\r\n                  <li>\r\n                    Email: <button onClick={EmailHandler}>Click This</button>\r\n                  </li>\r\n                  <li>\r\n                    Twitter:{\" \"}\r\n                    <Tooltip title={\":(\"}>\r\n                      <a\r\n                        href={\"https://github.com/JakeCover\"}\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                      >\r\n                        @cobular_\r\n                      </a>\r\n                    </Tooltip>\r\n                  </li>\r\n                  <li>\r\n                    GitHub:{\" \"}\r\n                    <a\r\n                      href={\"https://github.com/JakeCover\"}\r\n                      target=\"_blank\"\r\n                      rel=\"noreferrer\"\r\n                    >\r\n                      JakeCover\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    Telegram:{\" \"}\r\n                    <a\r\n                      href={\"https://t.me/cobular\"}\r\n                      target=\"_blank\"\r\n                      rel=\"noreferrer\"\r\n                    >\r\n                      @cobular\r\n                    </a>\r\n                  </li>\r\n                  <li>Elsewhere: Probably @cobular</li>\r\n                </ul>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div id={\"fun-info\"}>\r\n            <h2>I'm:</h2>\r\n            <ul>\r\n              <Age />\r\n              <LastFmLi />\r\n              <li>\r\n                doing (general stuff - in class, projects, sleeping, games)\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n",{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":7,"column":7,"nodeType":"65","messageId":"66","endLine":7,"endColumn":26},{"ruleId":"63","severity":1,"message":"67","line":30,"column":10,"nodeType":"65","messageId":"66","endLine":30,"endColumn":24},{"ruleId":"63","severity":1,"message":"68","line":30,"column":26,"nodeType":"65","messageId":"66","endLine":30,"endColumn":43},{"ruleId":"63","severity":1,"message":"69","line":31,"column":10,"nodeType":"65","messageId":"66","endLine":31,"endColumn":26},{"ruleId":"63","severity":1,"message":"70","line":31,"column":28,"nodeType":"65","messageId":"66","endLine":31,"endColumn":47},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"@typescript-eslint/no-unused-vars","'TelegramOutlinedSvg' is assigned a value but never used.","Identifier","unusedVar","'nowPlayingSong' is assigned a value but never used.","'setNowPlayingSong' is assigned a value but never used.","'nowPlayingArtist' is assigned a value but never used.","'setNowPlayingArtist' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]